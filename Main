import java.util.Scanner;

class Main {

	public static void main(String[] args) {
		
		// start of variable declaration
		int fv, sv, fv1, fv2, sv1, sv2, fv1sv1, fv2sv2, carry, d1, d2, d3, d4, total;
		// end of variable declaration
		
		// Start of implementation by Ludvig at 2016-09-05 11:05
		System.out.println("+***************************************************+"
				+ "\n+                                                   +"
				+ "\n+        Welcome to the DIT948 Calculator           +"
				+ "\n+                                                   +"
				+ "\n+***************************************************+"
				+ "\n\nPlease enter the operator to use (’+’, ’-’, ’x’, ’/’) or press ’q’ to quit:");
		Scanner input = new Scanner(System.in);
		// The operator to be used is scanned by the user
		String string = input.next();
		char op = string.charAt(0);

		// The two values to be used are scanned by the user
		System.out.println("Please enter the first value:");
		fv = input.nextInt();
		while (fv < 1 || fv > 99) {
			System.out.println("Invalid input, try again:");
			fv = input.nextInt();
		}
		System.out.println("Please enter the second value:");
		sv = input.nextInt();
		while (sv < 0 || sv > 99) {
			System.out.println("Invalid input, try again:");
			sv = input.nextInt();
		}
		// End of implementation by Ludvig at 2016-09-05 11:05

		if (op == '+') {
			// Start of implementation by Ludvig at 2016-09-07 10:58
			fv1 = fv % 10; // The last digits from the two values are seperated
			sv1 = sv % 10;
			fv1sv1 = (fv1 + sv1); // The last digits are added
			carry = (fv1sv1 > 9) ? 1 : 0; // If the last two digits add up to a two-digit number, 1 is carried
			fv1sv1 %= 10; // the last digit from fv1sv1 is extracted
			
			fv2 = fv / 10; // The first digits from the two values are separated
			sv2 = sv / 10;
			fv2sv2 = fv2 + sv2 + carry; // The digits are added and if a 1 was carried, it's added
			
			total = fv2sv2 * 10 + fv1sv1; // The final result is produced
			System.out.println("The sum is " + total); // The result is printed
			//End of implementation by Ludvig Hygrell at 2016-09-07 10:58
		} else if (op == '-') {

		} else if (op == 'x') {
			// Start of implementation by Ludvig at 2016-09-07 10:58
			fv1 = fv % 10; // the last digit from the first value is separated
			fv2 = fv / 10; // the first digit from the first value is separated
			
			fv1 *= sv;
			fv2 = (fv2 * sv) * 10;
			
			d1 = (fv1 % 10) + (fv2 % 10); // The last digits are added
			carry = (d1 > 9) ? 1 : 0; // If the last two digits add up to a two-digit number, 1 is carried
			d1 %= 10; // the last digit from d1 is extracted
			
			d2 = (( fv1 / 10 ) % 10) + ((fv2 / 10) % 10) + carry; //The next two digits are added, if a 1 is carried, it's added
			carry = (d2 > 9) ? 1 : 0; // If the last two digits add up to a two-digit number, 1 is carried
			d2 %= 10; // the last digit from d1 is extracted
			
			d3 = (( fv1 / 100 ) % 10) + ((fv2 / 100) % 10) + carry; //The next two digits are added, if a 1 is carried, it's added
			carry = (d3 > 9) ? 1 : 0; // If the last two digits add up to a two-digit number, 1 is carried
			d3 %= 10; // the last digit from d1 is extracted
			
			d4 = (( fv1 / 1000) % 10) + ((fv2 / 1000) % 10) + carry; //The last two digits are added, if a 1 is carried, it's added
			carry = (d4 > 9) ? 1 : 0; // If the last two digits add up to a two-digit number, 1 is carried
			d4 %= 10; // the last digit from d1 is extracted
			
			total = d1 + d2 * 10 + d3 * 100 + d4 * 1000;
			
			System.out.println("The product is " + total);
			// Start of implementation by Ludvig at 2016-09-07 10:58
		} else if (op == '/') {

		} else if (op == 'q') {

		} else {

		}
	}

}
